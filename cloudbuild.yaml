steps:
# Download the terraform.tfvars from Secret Manager
- name: 'gcr.io/${_PROJECT_ID}/my-docker-repo/gcp-terraform-build:latest'
  id: download-tfvars
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud secrets versions access latest --secret="worker-tfvars" --project="${_PROJECT_ID}" > terraform/terraform.tfvars

# Build and tag the Docker image
- name: 'gcr.io/${_PROJECT_ID}/my-docker-repo/gcp-terraform-build:latest'
  id: build
  args: [
    'docker',
    'build',
    '--build-arg', 'BASE_IMAGE_LOCATION=${_LOCATION}',
    '--build-arg', 'PROJECT_ID=${_PROJECT_ID}',
    '--build-arg', 'REPOSITORY_ID=${_REPOSITORY_ID}',
    '-t', 'gcr.io/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}:$BUILD_ID',
    '-t', 'gcr.io/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}:latest',
    '-f', 'Dockerfile',
    '.'
  ]
  waitFor: ['download-tfvars']

# Push the images
- name: 'gcr.io/${_PROJECT_ID}/my-docker-repo/gcp-terraform-build:latest'
  id: push
  args: ['docker', 'push', 'gcr.io/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}', '--all-tags']
  waitFor: ['build']

# Run Terraform to deploy the function and its resources
- name: 'gcr.io/${_PROJECT_ID}/my-docker-repo/gcp-terraform-build:latest'
  id: terraform-deploy
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    cd terraform
    terraform init -backend-config="prefix=cloud-spanner-demo/${_PROJECT_SUFFIX}/worker"
    terraform apply -auto-approve -var="image_tag=$BUILD_ID"
  waitFor: ['push']

# Clean up old images
- name: 'gcr.io/${_PROJECT_ID}/my-docker-repo/gcp-terraform-build:latest'
  id: cleanup-images
  entrypoint: 'bash'
  args:
  - 'cleanup_images.sh'
  - '${_LOCATION}'
  - '${_PROJECT_ID}'
  - '${_REPOSITORY_ID}'
  - '${_IMAGE_NAME}'
  waitFor: ['terraform-deploy']

images:
- 'gcr.io/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}:$BUILD_ID'
- 'gcr.io/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}:latest'
options:
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _LOCATION: 'europe-west1'
  _PROJECT_ID: '${PROJECT_ID}'
  _REPOSITORY_ID: 'my-docker-repo'
  _IMAGE_NAME: 'worker'
  _REGION: 'europe-west1'
  _REDIS_PORT: '6379'
  _SPANNER_INSTANCE: 'my-spanner-instance'
  _SPANNER_DATABASE: 'my-spanner-database'
  _WORKER_SA_EMAIL: 'worker-sa@${PROJECT_ID}.iam.gserviceaccount.com'
  _PROJECT_SUFFIX: ''
  _VPC_CONNECTOR: 'projects/spanner-demo-kid/locations/europe-west1/connectors/serverless-connector'
  _WORKER_SA_KEY_SECRET_ID: ''
